{"ast":null,"code":"var _jsxFileName = \"/Users/nachogomez/Downloads/Integrador M2/client/src/components/Cards/Cards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport Card from \"../Card/Card\";\nimport styles from \"./Cards.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards(_ref) {\n  _s();\n  let {\n    characters,\n    onClose\n  } = _ref;\n  const [activeCard, setActiveCard] = useState(0);\n  const containerRef = useRef();\n  const handleMouseMove = event => {\n    const container = containerRef.current;\n    const containerWidth = container.offsetWidth;\n    const containerCenter = container.getBoundingClientRect().left + containerWidth / 2;\n    const mouseX = event.clientX;\n\n    // Calcula el índice de la tarjeta activa\n    const cards = Array.from(container.children);\n    const activeIndex = cards.findIndex(card => {\n      const cardRect = card.getBoundingClientRect();\n      return mouseX >= cardRect.left && mouseX <= cardRect.right;\n    });\n    if (activeIndex !== -1) {\n      setActiveCard(activeIndex);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: styles.cardsContainer,\n    onMouseMove: handleMouseMove,\n    children: characters.map((char, index) => /*#__PURE__*/_jsxDEV(Card, {\n      id: char.id,\n      name: char.name,\n      status: char.status,\n      species: char.species,\n      gender: char.gender,\n      origin: char.origin.name,\n      image: char.image,\n      onClose: onClose,\n      className: `${styles.card} ${index === activeCard ? styles.active : ''}`\n    }, char.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"23OrjjCX8GcSTgRZcEK8cN/Qg6c=\");\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useRef","useState","Card","styles","jsxDEV","_jsxDEV","Cards","_ref","_s","characters","onClose","activeCard","setActiveCard","containerRef","handleMouseMove","event","container","current","containerWidth","offsetWidth","containerCenter","getBoundingClientRect","left","mouseX","clientX","cards","Array","from","children","activeIndex","findIndex","card","cardRect","right","ref","className","cardsContainer","onMouseMove","map","char","index","id","name","status","species","gender","origin","image","active","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nachogomez/Downloads/Integrador M2/client/src/components/Cards/Cards.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport Card from \"../Card/Card\";\nimport styles from \"./Cards.module.css\";\n\nexport default function Cards({ characters, onClose }) {\n  const [activeCard, setActiveCard] = useState(0);\n  const containerRef = useRef();\n\n  const handleMouseMove = (event) => {\n    const container = containerRef.current;\n    const containerWidth = container.offsetWidth;\n    const containerCenter = container.getBoundingClientRect().left + containerWidth / 2;\n    const mouseX = event.clientX;\n\n    // Calcula el índice de la tarjeta activa\n    const cards = Array.from(container.children);\n    const activeIndex = cards.findIndex((card) => {\n      const cardRect = card.getBoundingClientRect();\n      return mouseX >= cardRect.left && mouseX <= cardRect.right;\n    });\n\n    if (activeIndex !== -1) {\n      setActiveCard(activeIndex);\n    }\n  };\n\n  return (\n    <div\n      ref={containerRef}\n      className={styles.cardsContainer}\n      onMouseMove={handleMouseMove}\n    >\n      {characters.map((char, index) => (\n        <Card\n          key={char.id}\n          id={char.id}\n          name={char.name}\n          status={char.status}\n          species={char.species}\n          gender={char.gender}\n          origin={char.origin.name}\n          image={char.image}\n          onClose={onClose}\n          className={`${styles.card} ${index === activeCard ? styles.active : ''}`}\n        />\n      ))}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAA0B;EAAAC,EAAA;EAAA,IAAzB;IAAEC,UAAU;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EACnD,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAMY,YAAY,GAAGb,MAAM,EAAE;EAE7B,MAAMc,eAAe,GAAIC,KAAK,IAAK;IACjC,MAAMC,SAAS,GAAGH,YAAY,CAACI,OAAO;IACtC,MAAMC,cAAc,GAAGF,SAAS,CAACG,WAAW;IAC5C,MAAMC,eAAe,GAAGJ,SAAS,CAACK,qBAAqB,EAAE,CAACC,IAAI,GAAGJ,cAAc,GAAG,CAAC;IACnF,MAAMK,MAAM,GAAGR,KAAK,CAACS,OAAO;;IAE5B;IACA,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACX,SAAS,CAACY,QAAQ,CAAC;IAC5C,MAAMC,WAAW,GAAGJ,KAAK,CAACK,SAAS,CAAEC,IAAI,IAAK;MAC5C,MAAMC,QAAQ,GAAGD,IAAI,CAACV,qBAAqB,EAAE;MAC7C,OAAOE,MAAM,IAAIS,QAAQ,CAACV,IAAI,IAAIC,MAAM,IAAIS,QAAQ,CAACC,KAAK;IAC5D,CAAC,CAAC;IAEF,IAAIJ,WAAW,KAAK,CAAC,CAAC,EAAE;MACtBjB,aAAa,CAACiB,WAAW,CAAC;IAC5B;EACF,CAAC;EAED,oBACExB,OAAA;IACE6B,GAAG,EAAErB,YAAa;IAClBsB,SAAS,EAAEhC,MAAM,CAACiC,cAAe;IACjCC,WAAW,EAAEvB,eAAgB;IAAAc,QAAA,EAE5BnB,UAAU,CAAC6B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BnC,OAAA,CAACH,IAAI;MAEHuC,EAAE,EAAEF,IAAI,CAACE,EAAG;MACZC,IAAI,EAAEH,IAAI,CAACG,IAAK;MAChBC,MAAM,EAAEJ,IAAI,CAACI,MAAO;MACpBC,OAAO,EAAEL,IAAI,CAACK,OAAQ;MACtBC,MAAM,EAAEN,IAAI,CAACM,MAAO;MACpBC,MAAM,EAAEP,IAAI,CAACO,MAAM,CAACJ,IAAK;MACzBK,KAAK,EAAER,IAAI,CAACQ,KAAM;MAClBrC,OAAO,EAAEA,OAAQ;MACjByB,SAAS,EAAG,GAAEhC,MAAM,CAAC4B,IAAK,IAAGS,KAAK,KAAK7B,UAAU,GAAGR,MAAM,CAAC6C,MAAM,GAAG,EAAG;IAAE,GATpET,IAAI,CAACE,EAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAWf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAAC5C,EAAA,CA5CuBF,KAAK;AAAA+C,EAAA,GAAL/C,KAAK;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}