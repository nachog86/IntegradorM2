{"ast":null,"code":"var _jsxFileName = \"/Users/nachogomez/Downloads/Integrador M2/client/src/components/Cards/Cards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Card from \"../Card/Card\";\nimport styles from \"./Cards.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards(_ref) {\n  _s();\n  let {\n    characters,\n    onClose\n  } = _ref;\n  const [mousePosition, setMousePosition] = useState(null);\n  const [isMouseOver, setIsMouseOver] = useState(false);\n  const cardContainerRef = useRef();\n  useEffect(() => {\n    if (isMouseOver && mousePosition !== null && cardContainerRef.current) {\n      const containerWidth = cardContainerRef.current.offsetWidth;\n      const scrollWidth = cardContainerRef.current.scrollWidth;\n      const maxScrollLeft = scrollWidth - containerWidth;\n      const scrollLeft = mousePosition / window.innerWidth * maxScrollLeft;\n      cardContainerRef.current.scrollLeft = scrollLeft;\n    }\n  }, [mousePosition, isMouseOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: cardContainerRef,\n    className: `${styles.mainDiv} ${styles.cardsContainer}`,\n    onMouseMove: e => setMousePosition(e.clientX),\n    onMouseOver: () => setIsMouseOver(true),\n    onMouseOut: () => setIsMouseOver(false),\n    children: characters.map(char => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        id: char.id,\n        name: char.name,\n        status: char.status,\n        species: char.species,\n        gender: char.gender,\n        origin: char.origin.name,\n        image: char.image,\n        onClose: onClose,\n        className: styles.card\n      }, char.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"znu2zvWEMfzN6PwqPAyACAzQzRI=\");\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Card","styles","jsxDEV","_jsxDEV","Cards","_ref","_s","characters","onClose","mousePosition","setMousePosition","isMouseOver","setIsMouseOver","cardContainerRef","current","containerWidth","offsetWidth","scrollWidth","maxScrollLeft","scrollLeft","window","innerWidth","ref","className","mainDiv","cardsContainer","onMouseMove","e","clientX","onMouseOver","onMouseOut","children","map","char","id","name","status","species","gender","origin","image","card","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nachogomez/Downloads/Integrador M2/client/src/components/Cards/Cards.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Card from \"../Card/Card\";\nimport styles from \"./Cards.module.css\";\n\nexport default function Cards({ characters, onClose }) {\n  const [mousePosition, setMousePosition] = useState(null);\n  const [isMouseOver, setIsMouseOver] = useState(false);\n  const cardContainerRef = useRef();\n\n  useEffect(() => {\n    if (isMouseOver && mousePosition !== null && cardContainerRef.current) {\n      const containerWidth = cardContainerRef.current.offsetWidth;\n      const scrollWidth = cardContainerRef.current.scrollWidth;\n      const maxScrollLeft = scrollWidth - containerWidth;\n      const scrollLeft = (mousePosition / window.innerWidth) * maxScrollLeft;\n      cardContainerRef.current.scrollLeft = scrollLeft;\n    }\n  }, [mousePosition, isMouseOver]);\n\n  return (\n    <div\n      ref={cardContainerRef}\n      className={`${styles.mainDiv} ${styles.cardsContainer}`}\n      onMouseMove={e => setMousePosition(e.clientX)}\n      onMouseOver={() => setIsMouseOver(true)}\n      onMouseOut={() => setIsMouseOver(false)}\n    >\n      {characters.map((char) => {\n        return (\n          <Card\n            key={char.id}\n            id={char.id}\n            name={char.name}\n            status={char.status}\n            species={char.species}\n            gender={char.gender}\n            origin={char.origin.name}\n            image={char.image}\n            onClose={onClose}\n            className={styles.card}\n          />\n        );\n      })}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAA0B;EAAAC,EAAA;EAAA,IAAzB;IAAEC,UAAU;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EACnD,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMgB,gBAAgB,GAAGf,MAAM,EAAE;EAEjCC,SAAS,CAAC,MAAM;IACd,IAAIY,WAAW,IAAIF,aAAa,KAAK,IAAI,IAAII,gBAAgB,CAACC,OAAO,EAAE;MACrE,MAAMC,cAAc,GAAGF,gBAAgB,CAACC,OAAO,CAACE,WAAW;MAC3D,MAAMC,WAAW,GAAGJ,gBAAgB,CAACC,OAAO,CAACG,WAAW;MACxD,MAAMC,aAAa,GAAGD,WAAW,GAAGF,cAAc;MAClD,MAAMI,UAAU,GAAIV,aAAa,GAAGW,MAAM,CAACC,UAAU,GAAIH,aAAa;MACtEL,gBAAgB,CAACC,OAAO,CAACK,UAAU,GAAGA,UAAU;IAClD;EACF,CAAC,EAAE,CAACV,aAAa,EAAEE,WAAW,CAAC,CAAC;EAEhC,oBACER,OAAA;IACEmB,GAAG,EAAET,gBAAiB;IACtBU,SAAS,EAAG,GAAEtB,MAAM,CAACuB,OAAQ,IAAGvB,MAAM,CAACwB,cAAe,EAAE;IACxDC,WAAW,EAAEC,CAAC,IAAIjB,gBAAgB,CAACiB,CAAC,CAACC,OAAO,CAAE;IAC9CC,WAAW,EAAEA,CAAA,KAAMjB,cAAc,CAAC,IAAI,CAAE;IACxCkB,UAAU,EAAEA,CAAA,KAAMlB,cAAc,CAAC,KAAK,CAAE;IAAAmB,QAAA,EAEvCxB,UAAU,CAACyB,GAAG,CAAEC,IAAI,IAAK;MACxB,oBACE9B,OAAA,CAACH,IAAI;QAEHkC,EAAE,EAAED,IAAI,CAACC,EAAG;QACZC,IAAI,EAAEF,IAAI,CAACE,IAAK;QAChBC,MAAM,EAAEH,IAAI,CAACG,MAAO;QACpBC,OAAO,EAAEJ,IAAI,CAACI,OAAQ;QACtBC,MAAM,EAAEL,IAAI,CAACK,MAAO;QACpBC,MAAM,EAAEN,IAAI,CAACM,MAAM,CAACJ,IAAK;QACzBK,KAAK,EAAEP,IAAI,CAACO,KAAM;QAClBhC,OAAO,EAAEA,OAAQ;QACjBe,SAAS,EAAEtB,MAAM,CAACwC;MAAK,GATlBR,IAAI,CAACC,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAUZ;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACvC,EAAA,CAzCuBF,KAAK;AAAA0C,EAAA,GAAL1C,KAAK;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}